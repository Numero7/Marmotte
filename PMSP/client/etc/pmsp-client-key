#!/bin/bash
#
# Identification:
#   $Id$
#
# Syntaxe:
#   ./pmsp-client-key rotate
#
# Description:
#   Ce script gère la clé publique du client PMSP.
#
#   Les paramètres sont les suivants :Il admet un et un seul paramètre qui est "rotate" :
#   rotate
#	Le fichier pmsp.pub contenant la clé publique courante est copiée dans
#       pmsp.old et le fichier pmsp.new.pub contenant la nouvelle clé est 
#	renommé en pmsp.pub. La combinaison d'une copie et d'un déplacement
#       garantit que l'opération se fait sans coupure de service pour les
#	applications qui utilisent le client PMSP.
#
# Auteur:
#    Roland Dirlewanger, CNRS - Délégation Aquitaine, 2010-2013.
#
#
# Licence:
#    Ce fichier est distribué sous license CeCILL-C
#    (voir http://www.cecill.info/licences/Licence_CeCILL-C_V1-fr.html)
#

########################################################################
#                                                                      #
# CONFIGURATION ET OPTIONS PAR DEFAUT                                  #
#                                                                      #
########################################################################

OPT_COMMAND=""
PUBL_KEY=pmsp.pub
NEW_PUBL_KEY=pmsp.new.pub
OLD_PUBL_KEY=pmsp.old

########################################################################
#                                                                      #
# FONCTIONS AUXILLAIRES                                                #
#                                                                      #
########################################################################

#
# Analyse les arguments
#
parse_options () {
    # les options
    declare -a args=($*)
    while getopts "h" OPT ${args[*]}; do
	case "$OPT" in
	    h)
		usage 0
		;;

	    '?')
		usage 1
		;;
	esac
    done

    # Vérifie qu'il y a exactement une commande
    size=${#args[*]}
    if [ $OPTIND != $size ]; then
	echo "Erreur: indiquer exactement une commande parmi: rotate" 1>&2
	usage 1
    fi

    # Le nom de la commande est à l'index OPTIND-1 du
    # tableau $args
    index=$((OPTIND-1))
    OPT_COMMAND=${args[$index]}
}

#
# Execute la commande
#
do_command () {
    case "$OPT_COMMAND" in
        rotate)
	    do_rotate
	    ;;

	*)
	    echo "Erreur: Commande \"$OPT_COMMAND\" inconnue" 1>&2
	    usage 1
	    ;;
    esac
}

#
# Effectue une rotation des clés
#
do_rotate () {
    # effectue la rotation de la clé publique
    cp -p $PUBL_KEY $OLD_PUBL_KEY || {
	echo "$0: impossible de sauvegarder l'ancienne clé $PUBL_KEY dans $OLD_PUBL_KEY"
	exit 1
    }
    mv $NEW_PUBL_KEY $PUBL_KEY || {
	echo "$0: impossible de renommer la nouvelle clé $NEW_PUBL_KEY en PUBL_KEY"
	exit 1
    }
}

#
# Affiche l'usage
#
usage () {
    cat 1>&2 <<EOF

Usage: $0 [-i] [-h] new|prepublish|rotate
  -h          Affiche ce message
  rotate      Effectue la rotation de la clé publique
EOF
    exit $1
}


########################################################################
#                                                                      #
# PROGRAMME PRINCIPAL                                                  #
#                                                                      #
########################################################################

parse_options $*
do_command
